name: CI/CD

on: [push, pull_request]

jobs:

  static-checks:
    name: Static code analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn
    - name: Lint
      run: yarn lint
    - name: Flow
      run: yarn flow

  deploy:
    name: Deployment to Expo
    runs-on: ubuntu-latest
    needs: static-checks
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Increase inotify limit
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Install dependencies
        run: yarn
      - name: Decrypt firebase config
        run: gpg --passphrase '${{ secrets.firebase_password }}' --batch --pinentry-mode loopback -o google-services.json -d google-services.json.gpg
        working-directory: ./android
      - name: Log in to expo
        run: yarn expo login --non-interactive -u ${{ secrets.expo_username }}
        env:
          EXPO_CLI_PASSWORD: ${{ secrets.expo_password }}
      - name: Determine release channel
        id: det-release-channel
        run: echo "::set-output name=channel-name::$(if [ "${{ github.ref }}" = "refs/heads/master" ]; then echo "default"; else echo "${{ github.ref }}" | cut -c12- | tr -c '[:alnum:]\r\n._-' _ | tr '[:upper:]' '[:lower:]'; fi)"
      - name: Publish to expo
        run: yarn expo publish --non-interactive --release-channel ${{ steps.det-release-channel.outputs.channel-name }}
